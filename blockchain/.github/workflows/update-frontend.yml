name: Update Frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/app/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Build and package website
        run: |
          chmod +x scripts/deploy_frontend.sh
          # Only build the frontend without deploying (as deployment is handled separately)
          WEBSITE_DIR="$GITHUB_WORKSPACE/frontend/app" bash -c '
            set -e
            cd "$WEBSITE_DIR"
            # Install dependencies if needed
            if [ ! -d "node_modules" ]; then
              echo "Installing dependencies..."
              npm install
            fi
            
            # Ensure .env.production exists
            if [ ! -f ".env.production" ]; then
              echo "Creating .env.production from template..."
              cp ../.env.production.example .env.production || cp .env.production.example .env.production || echo "REACT_APP_ENV=production" > .env.production
            fi
            # Build the application
            echo "Creating production build..."
            CI=false NODE_ENV=production npm run build
            if [ ! -d "build" ]; then
              echo "Error: Build failed, no build directory found"
              exit 1
            fi
            # Package the build
            echo "Packaging build for deployment..."
            rm -f frontend-build.zip
            zip -r frontend-build.zip build
            echo "Package created: frontend-build.zip"
          '
          
      # Upload the frontend package to the server
      - name: Upload build to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "frontend/app/frontend-build.zip"
          target: "~"
          strip_components: 2
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            # Create deployment directory if it doesn't exist
            sudo mkdir -p /var/www/globalcoyn/html
            
            # Backup current frontend
            timestamp=$(date +%Y%m%d%H%M%S)
            mkdir -p ~/backups/$timestamp
            cp -r /var/www/globalcoyn/html ~/backups/$timestamp/ || true
            
            # Unzip the build package
            echo "Extracting frontend build..."
            unzip -q ~/frontend-build.zip -d ~/frontend-temp
            
            # Deploy the new build
            echo "Deploying new frontend..."
            sudo rm -rf /var/www/globalcoyn/html/*
            sudo cp -r ~/frontend-temp/build/* /var/www/globalcoyn/html/
            
            # Set proper permissions
            sudo chown -R ec2-user:ec2-user /var/www/globalcoyn/html
            sudo chmod -R 755 /var/www/globalcoyn/html
            
            # Clean up
            echo "Cleaning up temporary files..."
            rm -rf ~/frontend-temp
            rm ~/frontend-build.zip
            
            # Restart Nginx
            echo "Restarting Nginx..."
            sudo systemctl restart nginx
            
            echo "Frontend deployment completed at $(date)"